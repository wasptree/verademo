name: Development Branch Workflow

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  # This step will build the maven application

  print-env-vars:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Print environment variables
        run: |
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
          echo "GITHUB_REF: ${{ github.ref }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
  
  build_app:
    name: Build Application with Maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    #- uses: actions/setup-java@v1
    #  with: 
    #    java-version: 1.8
    #- name: Cache Maven packages
    #  uses: actions/cache@v2
    #  with:
    #    path: ~/.m2
    #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
    #  run: mvn clean package
      run: echo "Package is built"

    - uses: actions/upload-artifact@v1
      with:
        name: verademo.war
        path: target/verademo.war


  software-composition-analysis:
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with: 
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - run: curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan . --update-advisor 2>&1 | tee sca_output.txt
      env:
        SRCCLR_API_TOKEN: ${{secrets.SRCCLR_API_TOKEN}}
    - uses: actions/upload-artifact@v1
      with:
        name: SCAScanResults
        path: sca_output.txt

  pipeline_scan:
      # needs the build step before this job will start running
      needs: build_app
      runs-on: ubuntu-latest
      name: Pipeline Scan

      steps:
        - name: checkout repo
          uses: actions/checkout@v2
        
        # get the compiled binary from a previous job
        - name: get archive
          uses: actions/download-artifact@v2
          with:
            name: verademo.war

        # run the pipeline scan action
        - name: pipeline-scan action step
          id: pipeline-scan
          uses: veracode/Veracode-pipeline-scan-action@pipeline-scan-beta-v0.0.3
          with:
            vid: ${{secrets.VID}}
            vkey: ${{secrets.VKEY}}
            file: "verademo.war"
